# Generated by Django 2.1.5 on 2019-01-27 07:28

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_student', models.BooleanField(default=False)),
                ('is_teacher', models.BooleanField(default=False)),
                ('is_parent', models.BooleanField(default=False)),
                ('phone', models.CharField(blank=True, max_length=60, null=True)),
                ('address', models.CharField(blank=True, max_length=60, null=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='pictures/')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('other_name', models.CharField(blank=True, max_length=100, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6, null=True)),
                ('religion', models.CharField(blank=True, choices=[('Islam', 'Islam'), ('Christianity', 'Christianity')], max_length=12, null=True)),
                ('state', models.CharField(blank=True, choices=[('Adamawa', 'Adamawa'), ('Abia', 'Abia')], max_length=100, null=True)),
                ('lga', models.CharField(blank=True, choices=[('Yola North', 'Yola North'), ('Yola South', 'Yola South')], max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'users',
                'abstract': False,
                'verbose_name': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third')], max_length=7)),
                ('date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('term', models.CharField(choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third')], max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='FeeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('amount', models.FloatField()),
                ('term', models.CharField(choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third')], max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third')], max_length=7)),
                ('fca', models.FloatField()),
                ('sca', models.FloatField()),
                ('exam', models.FloatField()),
                ('total', models.FloatField()),
                ('grade', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F')], max_length=1)),
                ('remark', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('due_amount', models.FloatField()),
                ('payment_status', models.CharField(choices=[('Paid', 'Paid'), ('Not Paid', 'Not Paid'), ('Partially Paid', 'Partially Paid')], max_length=50)),
                ('date_paid', models.DateTimeField(auto_now_add=True)),
                ('payment_method', models.CharField(choices=[('Cash', 'Cash'), ('Cheaque', 'Cheaque')], max_length=50)),
                ('term', models.CharField(choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third')], max_length=7)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.FeeType')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('note', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SectionAssign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placeholder', models.CharField(max_length=100)),
                ('signature', models.ImageField(blank=True, null=True, upload_to='school_signature/')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Section')),
                ('section_head', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('note', models.CharField(blank=True, max_length=200, null=True)),
                ('current_session', models.BooleanField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_name', models.CharField(max_length=100)),
                ('school_logo', models.ImageField(upload_to='school/')),
                ('school_address', models.CharField(max_length=150)),
                ('school_slogan', models.CharField(max_length=200)),
                ('ft_begins', models.DateField()),
                ('ft_ends', models.DateField()),
                ('st_begins', models.DateField()),
                ('st_ends', models.DateField()),
                ('tt_begins', models.DateField()),
                ('tt_ends', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_of_admission', models.CharField(blank=True, max_length=100, null=True)),
                ('roll_number', models.CharField(max_length=50)),
                ('in_class', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sms.Class')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('in_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Section')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectAssign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third')], max_length=7)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Session')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='payment',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Session'),
        ),
        migrations.AddField(
            model_name='grade',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Session'),
        ),
        migrations.AddField(
            model_name='grade',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='grade',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Subject'),
        ),
        migrations.AddField(
            model_name='feetype',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Section'),
        ),
        migrations.AddField(
            model_name='feetype',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Session'),
        ),
        migrations.AddField(
            model_name='expense',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Session'),
        ),
        migrations.AddField(
            model_name='class',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Section'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='in_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Class'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Session'),
        ),
    ]
