# Generated by Django 2.2.9 on 2019-12-30 19:33

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AbsentReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Batch Name')),
            ],
            options={
                'verbose_name': 'Batch',
                'verbose_name_plural': 'Batches',
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('amount_to_pay', models.FloatField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Students Class',
                'verbose_name_plural': 'Student classes',
            },
        ),
        migrations.CreateModel(
            name='MarkPercentage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True, verbose_name='name')),
                ('percentage', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)], verbose_name='percentage')),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(verbose_name='score')),
                ('term', models.CharField(choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third')], max_length=7, verbose_name='term')),
                ('mark_percentage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sms.MarkPercentage', verbose_name='mark percentage')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('note', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name': 'Section',
                'verbose_name_plural': 'Sections',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='session name')),
                ('note', models.CharField(blank=True, max_length=200, null=True, verbose_name='short note')),
                ('current_session', models.BooleanField(verbose_name='is current session')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='date Created')),
            ],
            options={
                'verbose_name': 'Session',
                'verbose_name_plural': 'Sessions',
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_name', models.CharField(max_length=100)),
                ('school_logo', models.ImageField(blank=True, null=True, upload_to='pictures/')),
                ('school_address', models.CharField(blank=True, max_length=300, null=True)),
                ('school_town', models.CharField(blank=True, max_length=100, null=True)),
                ('school_slogan', models.CharField(blank=True, max_length=200, null=True)),
                ('business_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('business_phone1', models.CharField(blank=True, max_length=11, null=True)),
                ('business_phone2', models.CharField(blank=True, max_length=11, null=True)),
                ('social_link1', models.CharField(blank=True, max_length=200, null=True)),
                ('social_link2', models.CharField(blank=True, max_length=200, null=True)),
                ('social_link3', models.CharField(blank=True, max_length=200, null=True)),
                ('ft_begins', models.DateField(blank=True, null=True)),
                ('ft_ends', models.DateField(blank=True, null=True)),
                ('st_begins', models.DateField(blank=True, null=True)),
                ('st_ends', models.DateField(blank=True, null=True)),
                ('tt_begins', models.DateField(blank=True, null=True)),
                ('tt_ends', models.DateField(blank=True, null=True)),
                ('sms_unit', models.IntegerField(default=200)),
            ],
            options={
                'verbose_name': 'School Configuration',
                'verbose_name_plural': 'School Configurations',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=50, verbose_name='subject short name')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='subject name')),
                ('subject_type', models.CharField(choices=[('Optional', 'Optional'), ('Mandatory', 'Mandatory')], max_length=30, verbose_name='subject type')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Section', verbose_name='section')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherNok',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('othername', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('relationship', models.CharField(blank=True, choices=[('Brother', 'Brother'), ('Sister', 'Sister'), ('Daughter', 'Daughter'), ('Son', 'Son'), ('Father', 'Father'), ('Mother', 'Mother')], max_length=50, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Next of kin',
                'verbose_name_plural': 'Next of kin',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('Mr.', 'Mr.'), ('Ms.', 'Ms'), ('Mrs.', 'Mrs'), ('Miss', 'Miss'), ('Malam', 'Malam'), ('Madam', 'Madam'), ('Prof.', 'Prof.'), ('Alhaji', 'Alhaji')], max_length=30)),
                ('branch', models.CharField(blank=True, max_length=50, null=True)),
                ('qualification', models.CharField(blank=True, max_length=150, null=True)),
                ('next_of_kin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.TeacherNok')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubjectAssign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third')], max_length=7, verbose_name='term')),
                ('clss', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Class', verbose_name='class')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Session', verbose_name='session')),
                ('subjects', models.ManyToManyField(blank=True, to='sms.Subject', verbose_name='subjects')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='teacher')),
            ],
            options={
                'verbose_name': 'Subject Allocation',
                'verbose_name_plural': 'Subject Allocations',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roll_number', models.CharField(max_length=50, verbose_name='Roll Number')),
                ('year_of_admission', models.CharField(blank=True, max_length=100, null=True, verbose_name='Year of Admission')),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sms.Batch', verbose_name='Batch')),
                ('in_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sms.Class', verbose_name='Class')),
                ('optional_subjects', models.ManyToManyField(blank=True, to='sms.Subject', verbose_name='Optional Subjects')),
                ('session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sms.Session', verbose_name='Session of Admission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Student')),
            ],
        ),
        migrations.CreateModel(
            name='SectionAssign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placeholder', models.CharField(max_length=100, verbose_name='placeholder')),
                ('signature', models.ImageField(blank=True, null=True, upload_to='school_signature/', verbose_name='signature')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Section', verbose_name='section')),
                ('section_head', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='section head')),
            ],
            options={
                'verbose_name': 'section allocation',
                'verbose_name_plural': 'section allocations',
            },
        ),
        migrations.CreateModel(
            name='ScorePermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(verbose_name='opens from')),
                ('end_time', models.DateTimeField(verbose_name='closes on')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Section', verbose_name='section')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Session', verbose_name='session')),
            ],
        ),
        migrations.CreateModel(
            name='ScoreModificationLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_score', models.FloatField(verbose_name='old score')),
                ('new_score', models.FloatField(verbose_name='new score')),
                ('date_modified', models.DateTimeField(auto_now_add=True, verbose_name='modified date')),
                ('score', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sms.Score', verbose_name='score')),
            ],
        ),
        migrations.AddField(
            model_name='score',
            name='session',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sms.Session', verbose_name='session'),
        ),
        migrations.AddField(
            model_name='score',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Student', verbose_name='student'),
        ),
        migrations.AddField(
            model_name='score',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sms.Subject', verbose_name='subject'),
        ),
        migrations.CreateModel(
            name='Psychomotor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('neatness', models.IntegerField(default=3, verbose_name='neatness')),
                ('politeness', models.IntegerField(default=3, verbose_name='politeness')),
                ('initiative', models.IntegerField(default=3, verbose_name='initiative')),
                ('cop_with_others', models.IntegerField(default=3, verbose_name='corporation with others')),
                ('leadership', models.IntegerField(default=3, verbose_name='leadership Trait')),
                ('helping_others', models.IntegerField(default=3, verbose_name='helping others')),
                ('emotional_stability', models.IntegerField(default=3, verbose_name='emotional stability')),
                ('health', models.IntegerField(default=3, verbose_name='health')),
                ('att_to_school_work', models.IntegerField(default=3, verbose_name='attentive to school work')),
                ('attentive', models.IntegerField(default=3, verbose_name='attentive')),
                ('perseverance', models.IntegerField(default=3, verbose_name='perseverance')),
                ('relationship_with_teachers', models.IntegerField(default=3, verbose_name='relationship with teachers')),
                ('punctuality', models.IntegerField(default=3, verbose_name='punctuality')),
                ('handwriting', models.IntegerField(default=3, verbose_name='handwriting')),
                ('verbal', models.IntegerField(default=3, verbose_name='verbal')),
                ('games', models.IntegerField(default=3, verbose_name='games')),
                ('sport', models.IntegerField(default=3, verbose_name='sport')),
                ('hand_tool', models.IntegerField(default=3, verbose_name='hand_tool')),
                ('drawing_and_painting', models.IntegerField(default=3, verbose_name='drawing and painting')),
                ('music_skills', models.IntegerField(default=3, verbose_name='music skills')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Student', verbose_name='student')),
            ],
        ),
        migrations.CreateModel(
            name='PerfomanceComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(max_length=15, verbose_name='term')),
                ('form_teacher_comment', models.TextField(verbose_name='form teacher comment')),
                ('principal_comment', models.TextField(verbose_name='principal comment')),
                ('guiding_and_council_comment', models.TextField(verbose_name='guiding and council comment')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Session', verbose_name='term')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Student', verbose_name='student')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid_amount', models.FloatField()),
                ('due_amount', models.FloatField()),
                ('date_paid', models.DateTimeField(auto_now_add=True)),
                ('payment_method', models.CharField(choices=[('Cash', 'Cash'), ('Cheaque', 'Cheaque')], max_length=50)),
                ('payment_status', models.CharField(choices=[('Paid', 'Fully Paid'), ('Not Paid', 'Not Paid'), ('Partially Paid', 'Partially Paid')], max_length=50)),
                ('term', models.CharField(choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third')], max_length=7)),
                ('teller_number', models.CharField(blank=True, max_length=100, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Session')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Student')),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('Mr.', 'Mr.'), ('Ms.', 'Ms'), ('Mrs.', 'Mrs'), ('Miss', 'Miss'), ('Malam', 'Malam'), ('Madam', 'Madam'), ('Prof.', 'Prof.'), ('Alhaji', 'Alhaji')], max_length=30)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('student', models.ManyToManyField(related_name='guardians', to='sms.Student')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('body', models.CharField(max_length=300)),
                ('unread', models.BooleanField(default=False)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('message_type', models.CharField(choices=[('Success', 'Success'), ('Error', 'Error'), ('Info', 'Info')], max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NoticeBoard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_title', models.CharField(blank=True, max_length=100, null=True)),
                ('post_body', models.TextField(blank=True, null=True)),
                ('posted_to', models.CharField(blank=True, max_length=100, null=True)),
                ('posted_on', models.DateTimeField(auto_now_add=True)),
                ('posted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='markpercentage',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Section', verbose_name='section'),
        ),
        migrations.CreateModel(
            name='GradeScale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F')], max_length=100, unique=True, verbose_name='grade')),
                ('mark_from', models.IntegerField(unique=True, verbose_name='mark from')),
                ('mark_upto', models.IntegerField(unique=True, verbose_name='mark upto')),
                ('remark', models.CharField(max_length=20, unique=True, verbose_name='remark')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='description')),
                ('color', models.CharField(default='#008000', max_length=20, verbose_name='color')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Section', verbose_name='section')),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remark', models.CharField(blank=True, max_length=50, null=True, verbose_name='remark')),
                ('grade', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F')], max_length=1, null=True, verbose_name='grade')),
                ('total', models.FloatField(blank=True, null=True, verbose_name='total')),
                ('score', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Score', verbose_name='score')),
            ],
            options={
                'verbose_name': 'Grade',
                'verbose_name_plural': 'Grades',
            },
        ),
        migrations.CreateModel(
            name='FeeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('amount', models.FloatField()),
                ('term', models.CharField(choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third')], max_length=7)),
                ('for_class', models.ManyToManyField(to='sms.Class')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Session')),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('term', models.CharField(choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third')], max_length=7)),
                ('amount', models.FloatField()),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Session')),
            ],
        ),
        migrations.CreateModel(
            name='EmailMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='email_pictures/%Y/%m/%d/', verbose_name='Featured image')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=80, null=True)),
                ('status', models.CharField(choices=[('D', 'Draft'), ('S', 'Delivered'), ('P', 'Pending')], default='P', max_length=1)),
                ('content', models.TextField()),
                ('admin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author', to=settings.AUTH_USER_MODEL)),
                ('recipients', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Mail',
                'verbose_name_plural': 'Mails',
            },
        ),
        migrations.AddField(
            model_name='class',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Section'),
        ),
        migrations.AddField(
            model_name='class',
            name='subjects',
            field=models.ManyToManyField(to='sms.Subject'),
        ),
        migrations.AddField(
            model_name='batch',
            name='clss',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Class', verbose_name='Class'),
        ),
        migrations.CreateModel(
            name='AutoComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avg_from', models.FloatField(unique=True)),
                ('avg_upto', models.FloatField(unique=True)),
                ('comment', models.CharField(max_length=100)),
                ('commenter', models.CharField(max_length=100)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Section')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.BooleanField(default=False)),
                ('late', models.BooleanField(blank=True, null=True)),
                ('term', models.CharField(choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third')], max_length=7)),
                ('absent_reason', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sms.AbsentReason')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Session')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms.Student')),
            ],
        ),
    ]
